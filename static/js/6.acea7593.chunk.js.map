{"version":3,"sources":["components/profile/CreatePost/CreatePost.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","hoc/withAuthRedirect.js","components/dialogs/Dialogs.module.css","components/dialogs/Dialogs.jsx","components/dialogs/DialogItem/DialogItem.jsx","components/dialogs/Message/Message.jsx","components/dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","className","classes","errorSpan","Textarea","props","child","Input","requiredField","value","maxLengthCreator","length","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","maxLength","CreateMessageReduxForm","reduxForm","form","name","onSubmit","handleSubmit","send","Field","component","validate","placeholder","content","button","Dialogs","dialogs","messages","dialogItems","message","sendMessage","DialogItem","path","person","id","dialog","activeClassName","active","MessageItem","text","compose","dialogsPage","map","Message","newMessageText","dispatch","newMessageBody","sendMessageActionCreator"],"mappings":"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","file":"static/js/6.acea7593.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"create\":\"CreatePost_create__kaLHl\",\"content\":\"CreatePost_content__1Othh\",\"error\":\"CreatePost_error__1L6ua\",\"button\":\"CreatePost_button__1YmJ5\",\"errorSpan\":\"CreatePost_errorSpan__BTLrF\"};","import React from \"react\";\r\nimport classes from \"../../profile/CreatePost/CreatePost.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    return (\r\n        <div>\r\n            {children}\r\n            {touched && error ? <p className={classes.errorSpan}>{error}</p> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, child, ...props}) => {\r\n    return <FormControl {...props}><textarea {...input} {...props}/></FormControl>\r\n}\r\n\r\nexport const Input = ({input, child, ...props}) => {\r\n    return <FormControl {...props}><input {...input} {...props}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, type = {}) => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={[...validators]}\r\n                   component={component}\r\n                   {...type}\r\n            />\r\n        </div>\r\n    )\r\n}","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = length => value => {\r\n    if (value.length > length) return `Max length can be only ${length} symbols`\r\n    return undefined\r\n}","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToPropsForRedirect = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__6QiwF\",\"dialogItems\":\"Dialogs_dialogItems__3P5IH\",\"dialog\":\"Dialogs_dialog__1o0cE\",\"active\":\"Dialogs_active__bXMHa\",\"messages\":\"Dialogs_messages__3vaAx\",\"message\":\"Dialogs_message__YMuZy\",\"send\":\"Dialogs_send__3QwYz\",\"content\":\"Dialogs_content__xUpI3\",\"button\":\"Dialogs_button__PH3Vi\"};","import classes from \"../dialogs/Dialogs.module.css\"\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(100)\r\n\r\nconst Dialogs = props => {\r\n    const dialogs = props.dialogs\r\n    const messages = props.messages\r\n\r\n    const send = message => {\r\n        props.sendMessage(message.message)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItems}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messages}\r\n                <CreateMessageReduxForm onSubmit={send}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CreateMessageForm = props => {\r\n    return (\r\n        <form name='message' onSubmit={props.handleSubmit}>\r\n            <div className={classes.send}>\r\n                <Field component={Textarea} validate={[requiredField, maxLength]} name={'message'}\r\n                       placeholder='Type here' className={classes.content}/>\r\n                <button className={classes.button}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst CreateMessageReduxForm = reduxForm({form: 'dialogMessage'})(CreateMessageForm)\r\n\r\nexport default Dialogs","import classes from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = props => {\r\n    const path = '/dialogs/' + props.person.id\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink className={classes.dialog} to={path} activeClassName={classes.active}>{props.person.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import classes from \"../Dialogs.module.css\";\r\n\r\nconst MessageItem = props => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message.id + '   ' + props.message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem","import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./Message/Message\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs.map(dialog => <DialogItem person={dialog}/>),\r\n        messages: state.dialogsPage.messages.map(message => <MessageItem message={message}/>),\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendMessage: newMessageBody => dispatch(sendMessageActionCreator(newMessageBody))\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)"],"sourceRoot":""}