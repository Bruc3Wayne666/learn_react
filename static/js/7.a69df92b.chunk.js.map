{"version":3,"sources":["components/profile/CreatePost/CreatePost.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/login/Login.module.css","components/login/Login.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","className","classes","errorSpan","Textarea","props","child","Input","requiredField","value","maxLengthCreator","length","LoginReduxForm","reduxForm","form","handleSubmit","_error","post","onSubmit","placeholder","name","validate","component","login","type","checkboxDiv","checkbox","submit","connect","state","isAuth","auth","logout","to","formData","email","password","remember"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,QAAU,4BAA4B,MAAQ,0BAA0B,OAAS,2BAA2B,UAAY,gC,gNCIxKC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACjD,OACI,gCACKA,EACAF,GAAWC,EAAQ,mBAAGE,UAAWC,IAAQC,UAAtB,SAAkCJ,IAAa,SAKlEK,EAAW,SAAC,GAA8B,IAA7BR,EAA4B,EAA5BA,MAAiBS,GAAW,EAArBC,MAAqB,kBAClD,OAAO,cAACX,EAAD,2BAAiBU,GAAjB,aAAwB,oDAAcT,GAAWS,QAG/CE,EAAQ,SAAC,GAA8B,IAA7BX,EAA4B,EAA5BA,MAAiBS,GAAW,EAArBC,MAAqB,kBAC/C,OAAO,cAACX,EAAD,2BAAiBU,GAAjB,aAAwB,iDAAWT,GAAWS,S,iCCnBzD,oEAAO,IAAMG,EAAgB,SAAAC,GACzB,IAAIA,EACJ,MAAO,qBAIEC,EAAmB,SAAAC,GAAM,OAAI,SAAAF,GACtC,GAAIA,EAAME,OAASA,EAAQ,MAAM,0BAAN,OAAiCA,EAAjC,e,oBCN/BlB,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,SAAW,wBAAwB,YAAc,2BAA2B,SAAW,wBAAwB,OAAS,sBAAsB,MAAQ,uB,iCCDhO,oGAsCMkB,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAvBL,SAAC,GAA4B,IAA3BE,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,OAC9B,OACI,uBAAMf,UAAWC,IAAQe,KAAMC,SAAUH,EAAzC,UACI,8BACI,cAAC,IAAD,CAAOI,YAAa,gBAAiBC,KAAM,QAASC,SAAU,CAACb,KAAgBc,UAAWf,IACnFN,UAAWC,IAAQqB,UAE9B,8BACI,cAAC,IAAD,CAAOJ,YAAa,WAAYC,KAAM,WAAYC,SAAU,CAACb,KAAgBc,UAAWf,IACjFiB,KAAM,WAAYvB,UAAWC,IAAQqB,UAEhD,sBAAKtB,UAAWC,IAAQuB,YAAxB,UACI,cAAC,IAAD,CAAOL,KAAM,WAAYE,UAAWf,IAAOiB,KAAM,WAAYvB,UAAWC,IAAQwB,WADpF,iBAICV,GAAU,qBAAKf,UAAWC,IAAQH,MAAxB,SAAgCiB,IAC3C,8BACI,wBAAQf,UAAWC,IAAQyB,OAAQH,KAAK,SAAxC,2BA4BDI,uBALS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAME,KAAKD,UAIiB,CACpCP,UACAS,YAFWJ,EApBD,SAAAvB,GAKV,OAAIA,EAAMyB,OAAe,cAAC,IAAD,CAAUG,GAAI,aAGnC,gCACI,uCACA,cAACrB,EAAD,CAAgBM,SATP,SAAAgB,GACb7B,EAAMkB,MAAMW,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.a69df92b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"create\":\"CreatePost_create__kaLHl\",\"content\":\"CreatePost_content__1Othh\",\"error\":\"CreatePost_error__1L6ua\",\"button\":\"CreatePost_button__1YmJ5\",\"errorSpan\":\"CreatePost_errorSpan__BTLrF\"};","import React from \"react\";\r\nimport classes from \"../../profile/CreatePost/CreatePost.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    return (\r\n        <div>\r\n            {children}\r\n            {touched && error ? <p className={classes.errorSpan}>{error}</p> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, child, ...props}) => {\r\n    return <FormControl {...props}><textarea {...input} {...props}/></FormControl>\r\n}\r\n\r\nexport const Input = ({input, child, ...props}) => {\r\n    return <FormControl {...props}><input {...input} {...props}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, type = {}) => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={[...validators]}\r\n                   component={component}\r\n                   {...type}\r\n            />\r\n        </div>\r\n    )\r\n}","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = length => value => {\r\n    if (value.length > length) return `Max length can be only ${length} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Login_post__p8koB\",\"login\":\"Login_login__DNn18\",\"password\":\"Login_password__3minB\",\"checkboxDiv\":\"Login_checkboxDiv__tF5uj\",\"checkbox\":\"Login_checkbox__tCJv_\",\"submit\":\"Login_submit__3hkxR\",\"error\":\"Login_error__1IICq\"};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from \"../login/Login.module.css\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n// Don't know how to solve the problem with classnames yet\r\n// {/*{createField('Login (email)', 'email', [requiredField], Input, {})}*/}\r\n// {/*{createField('Password', 'password', [requiredField], Input, {type: 'password'})}*/}\r\n// {/*{createField(null, 'remember', [], Input, {type: 'checkbox'})}*/}\r\n\r\nconst LoginForm = ({handleSubmit, _error}) => {\r\n    return (\r\n        <form className={classes.post} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Login (email)'} name={'email'} validate={[requiredField]} component={Input}\r\n                       className={classes.login}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} validate={[requiredField]} component={Input}\r\n                       type={'password'} className={classes.login}/>\r\n            </div>\r\n            <div className={classes.checkboxDiv}>\r\n                <Field name={'remember'} component={Input} type={'checkbox'} className={classes.checkbox}/>\r\n                Remember Me\r\n            </div>\r\n            {_error && <div className={classes.error}>{_error}</div>}\r\n            <div>\r\n                <button className={classes.submit} type=\"submit\">Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = props => {\r\n    const onSubmit = formData => {\r\n        props.login(formData.email, formData.password, formData.remember)\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={'/profile'}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    login,\r\n    logout\r\n})(Login)"],"sourceRoot":""}