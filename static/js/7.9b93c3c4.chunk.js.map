{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/profile/CreatePost/CreatePost.module.css","utils/validators/validators.js","components/login/Login.module.css","components/login/Login.jsx"],"names":["FormControl","input","meta","touched","error","children","className","classes","errorSpan","Textarea","props","child","Input","CreateField","placeholder","name","validators","component","type","validate","module","exports","requiredField","value","maxLengthCreator","length","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","post","onSubmit","login","checkboxDiv","checkbox","src","alt","submit","connect","state","auth","captcha","isAuth","logout","to","formData","email","password","remember"],"mappings":"mUAKMA,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACjD,OACI,gCACKA,EACAF,GAAWC,EAAQ,mBAAGE,UAAWC,IAAQC,UAAtB,SAAkCJ,IAAa,SAKlEK,EAAW,SAAC,GAA8B,IAA7BR,EAA4B,EAA5BA,MAAiBS,GAAW,EAArBC,MAAqB,kBAClD,OAAO,cAACX,EAAD,2BAAiBU,GAAjB,aAAwB,oDAAcT,GAAWS,QAG/CE,EAAQ,SAAC,GAA8B,IAA7BX,EAA4B,EAA5BA,MAAiBS,GAAW,EAArBC,MAAqB,kBAC/C,OAAO,cAACX,EAAD,2BAAiBU,GAAjB,aAAwB,iDAAWT,GAAWS,QAG5CG,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAA0B,IAAfC,EAAc,uDAAP,GACzE,OACI,8BACI,cAAC,IAAD,aAAOJ,YAAaA,EACbC,KAAMA,EACNI,SAAQ,YAAMH,GACdC,UAAWA,GACPC,Q,oBC5BvBE,EAAOC,QAAU,CAAC,OAAS,2BAA2B,QAAU,4BAA4B,MAAQ,0BAA0B,OAAS,2BAA2B,UAAY,gC,iCCD9K,oEAAO,IAAMC,EAAgB,SAAAC,GACzB,IAAIA,EACJ,MAAO,qBAIEC,EAAmB,SAAAC,GAAM,OAAI,SAAAF,GACtC,GAAIA,EAAME,OAASA,EAAQ,MAAM,0BAAN,OAAiCA,EAAjC,e,oBCN/BL,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,SAAW,wBAAwB,YAAc,2BAA2B,SAAW,wBAAwB,OAAS,sBAAsB,MAAQ,uB,iCCDhO,oGA0CMK,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EA3BL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAczB,EAAuB,EAAvBA,MAAO0B,EAAgB,EAAhBA,WACrC,OACI,uBAAMxB,UAAWC,IAAQwB,KAAMC,SAAUH,EAAzC,UACI,8BACI,cAAC,IAAD,CAAOf,YAAa,gBAAiBC,KAAM,QAASI,SAAU,CAACG,KAAgBL,UAAWL,IACnFN,UAAWC,IAAQ0B,UAE9B,8BACI,cAAC,IAAD,CAAOnB,YAAa,WAAYC,KAAM,WAAYI,SAAU,CAACG,KAAgBL,UAAWL,IACjFM,KAAM,WAAYZ,UAAWC,IAAQ0B,UAEhD,sBAAK3B,UAAWC,IAAQ2B,YAAxB,UACI,cAAC,IAAD,CAAOnB,KAAM,WAAYE,UAAWL,IAAOM,KAAM,WAAYZ,UAAWC,IAAQ4B,WADpF,iBAICL,GAAc,gCAAK,qBAAKM,IAAKN,EAAYO,IAAI,YAEzCxB,YAAY,0BAA2B,UAAW,CAACS,KAAgBV,IAAO,OAE9ER,GAAS,qBAAKE,UAAWC,IAAQH,MAAxB,SAAgCA,IAC1C,8BACI,wBAAQE,UAAWC,IAAQ+B,OAAQpB,KAAK,SAAxC,2BA8BDqB,uBAPS,SAAAC,GAAK,MAAK,CAC1BV,WAAYU,EAAMC,KAAKC,QACvBC,OAAOH,EAAMC,KAAKE,UAMtB,CACIV,UACAW,YAHOL,EAtBD,SAAA7B,GAKV,OAAIA,EAAMiC,OAAe,cAAC,IAAD,CAAUE,GAAI,aAGnC,gCACI,uCACA,cAACnB,EAAD,CAAgBM,SATP,SAAAc,GACbpC,EAAMuB,MAAMa,EAASC,MAAOD,EAASE,SAAUF,EAASG,SAAUH,EAASJ,UAQnCZ,WAAYpB,EAAMoB","file":"static/js/7.9b93c3c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"../../profile/CreatePost/CreatePost.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    return (\r\n        <div>\r\n            {children}\r\n            {touched && error ? <p className={classes.errorSpan}>{error}</p> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, child, ...props}) => {\r\n    return <FormControl {...props}><textarea {...input} {...props}/></FormControl>\r\n}\r\n\r\nexport const Input = ({input, child, ...props}) => {\r\n    return <FormControl {...props}><input {...input} {...props}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, type = {}) => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={[...validators]}\r\n                   component={component}\r\n                   {...type}\r\n            />\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"create\":\"CreatePost_create__kaLHl\",\"content\":\"CreatePost_content__1Othh\",\"error\":\"CreatePost_error__1L6ua\",\"button\":\"CreatePost_button__1YmJ5\",\"errorSpan\":\"CreatePost_errorSpan__BTLrF\"};","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = length => value => {\r\n    if (value.length > length) return `Max length can be only ${length} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Login_post__p8koB\",\"login\":\"Login_login__DNn18\",\"password\":\"Login_password__3minB\",\"checkboxDiv\":\"Login_checkboxDiv__tF5uj\",\"checkbox\":\"Login_checkbox__tCJv_\",\"submit\":\"Login_submit__3hkxR\",\"error\":\"Login_error__1IICq\"};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from \"../login/Login.module.css\";\r\nimport {CreateField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n// Don't know how to solve the problem with classnames yet\r\n// {/*{createField('Login (email)', 'email', [requiredField], Input, {})}*/}\r\n// {/*{createField('Password', 'password', [requiredField], Input, {type: 'password'})}*/}\r\n// {/*{createField(null, 'remember', [], Input, {type: 'checkbox'})}*/}\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form className={classes.post} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Login (email)'} name={'email'} validate={[requiredField]} component={Input}\r\n                       className={classes.login}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} validate={[requiredField]} component={Input}\r\n                       type={'password'} className={classes.login}/>\r\n            </div>\r\n            <div className={classes.checkboxDiv}>\r\n                <Field name={'remember'} component={Input} type={'checkbox'} className={classes.checkbox}/>\r\n                Remember Me\r\n            </div>\r\n            {captchaUrl && <div><img src={captchaUrl} alt=\"captcha\"/>\r\n                {/*<Field placeholder={'Type symbols from image'} name={'captcha'} validate={[requiredField]} component={Input}/>*/}\r\n                {CreateField('Type symbols from image', 'captcha', [requiredField], Input, {})}\r\n            </div>}\r\n            {error && <div className={classes.error}>{error}</div>}\r\n            <div>\r\n                <button className={classes.submit} type=\"submit\">Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = props => {\r\n    const onSubmit = formData => {\r\n        props.login(formData.email, formData.password, formData.remember, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={'/profile'}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        captchaUrl: state.auth.captcha,\r\n        isAuth:state.auth.isAuth\r\n    }\r\n)\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        login,\r\n        logout\r\n    }\r\n)(Login)"],"sourceRoot":""}